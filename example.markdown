--- 
layout: page 
title: Example 
permalink: /example/ 
---  

The replication checklist includes several items. Below is a skeleton of a replication example that would be an acceptable submission. This example reflects best practices for replication packages submitted to *Political Analysis*. 

## Run File (`run.sh`)

The following is an example `run.sh` file. It should execute all scripts necessary to reproduce the results reported in the manuscript. The execution must be automated and ordered correctly. We strongly encourage running the use of a [`Dockerfile`](https://pa-replication.github.io/dockerfiles/) to run such scripts.

```bash
#!/bin/bash

set -ex # echo all commands

exec > >(tee -a run.log) 2>&1 # write output to log file

# print system information to report in README
echo "Operating System:"; uname -a
echo "Python Version:"; python3 --version
echo "R Version:"; R --version
echo "Julia Version:"; julia --version
echo "Cores: 4"
echo "RAM: 8GB"

# execute all scripts in correct order
python3 code/001_script1.py
Rscript code/002_script2.R
julia code/003_script3.jl
```

All scripts must be self-contained and not require manual input. If your analysis relies on specific software versions or packages, please document them clearly in the replication environment (e.g., `Dockerfile`, `renv.lock`, `environment.yml`).

It is also acceptable to use a standalone R script (e.g., `run.R`) or Python script (e.g., `run.py`) as the master script. These should likewise ensure fully automated execution and include environment and runtime documentation.

### R Script (`run.R`)

If using R as your run file, you can redirect output using `sink()`:

```r
sink("run.log", split = TRUE)
cat("Starting replication at: ", Sys.time(), "\n")

# Run analysis scripts
source("code/001_script1.R")
source("code/002_script2.R")

cat("Replication completed at: ", Sys.time(), "\n")
sink()
```

Alternatively, if using `rmarkdown::render()` or `knitr`, consider compiling to HTML or PDF and include it in the package (e.g., `run_output.html`).

### Python Script (`run.py`)

For Python-based replication, log output by redirecting `stdout` and `stderr`:

```python
import sys
import time

logfile = open("run.log", "w")
sys.stdout = sys.stderr = logfile

print("Starting replication at:", time.ctime())

# Run analysis scripts
exec(open("code/001_script1.py").read())
exec(open("code/002_script2.py").read())

print("Replication completed at:", time.ctime())
logfile.close()
```

### Other Run Formats

* **Jupyter Notebooks**: please export the notebook as `.html` or `.pdf` after execution and include it as part of your log.
* **Stata**: please include a `run.do` file in a similar format to the above
* **SPSS**: please include a `run.sps` file in a similar format to the above

## Log File

A log file confirms successful execution of the replication scripts and helps verify that all output files were generated from a single automated run. The above `run.sh` file includes a line to generate a log file.

```bash
exec >>(tee -a run.log) 2>&1 # write output to log file
```

Two alternative options are available.

1. Juyptr notebooks and R markdown files can be submitted in PDF or HTML form.
2. Output can simply be copied into a text file (this must include all output) 

## Read Me File

Your replication package must include a `README.md` file that describes how to run the code, the software environment, and the file structure. This file should adhere to the Social Science Data Editors template: [https://social-science-data-editors.github.io/template_README/](https://social-science-data-editors.github.io/template_README/).

```markdown
### Replication Package Overview

This package reproduces the results reported in the manuscript.

... Additional details ...

#### Software and Environment

- Python 3.10.6 with packages: pandas, numpy, ... 
- R 4.3.1 with packages: tidyverse, ggplot, ggforce, ... 
- Julia 1.9.2 with package: Plots.jl, ...  
- OS: Ubuntu 22.04 (or other linux distro / macOS / Windows with adjustments)  
- Runtime: approximately 30 minutes  
- Resources: 4 CPU cores, 8GB RAM, 0 GPU cores 

... Additional details ...
```

## Figures and Outputs

All figures and tables generated by the scripts must be saved programmatically. Use clearly named output folders:

- `figures/` for plots (`.pdf`, `.png`)
- `tables/` for results (`.csv`, `.tex`, `.txt`)

Filenames should correspond to those referenced in the manuscript, such as `figure1.pdf` or `table2.csv`, to facilitate verification.


